name: Release

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  # 这里保持原样

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest ruff

      - name: Train model (v0.1)
        run: python ml/train_v01.py

      - name: Prepare release notes
        run: |
          python - << 'EOF'
          import json
          m = json.load(open('artifacts/metrics.json'))
          open('RELEASE_NOTES.md','w').write(f"Version: {m['version']}\nRMSE: {m['rmse']}\n")
          EOF

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ← 新增：标准化为小写，并导出为 $IMAGE 供后续步骤使用
      - name: Normalize image name (lowercase)
        run: |
          IMAGE="${REGISTRY}/$(echo "${IMAGE_NAME}" | tr '[:upper:]' '[:lower:]'):${GITHUB_REF_NAME}"
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
          echo "Using image: ${IMAGE}"

      - name: Build image
        run: docker build -t "$IMAGE" .

      - name: Smoke test container
        run: |
          docker run -d --name svc -p 8000:8000 "$IMAGE"
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/health > /dev/null; then
              echo "Service is up"; break
            fi
            echo "Waiting for service... ($i)"; sleep 1
          done
          curl -f http://localhost:8000/health
          curl -f -X POST http://localhost:8000/predict \
            -H "Content-Type: application/json" \
            -d '{"age":0.02,"sex":-0.044,"bmi":0.06,"bp":-0.03,"s1":-0.02,"s2":0.03,"s3":-0.02,"s4":0.02,"s5":0.02,"s6":-0.001}'
          docker rm -f svc

      - name: Push image to GHCR
        run: docker push "$IMAGE"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body_path: RELEASE_NOTES.md
